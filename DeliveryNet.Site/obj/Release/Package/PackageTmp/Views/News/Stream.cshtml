@using PagedList
@using PagedList.Mvc
@model Delivery.ViewModels.News.StreamViewModel 
@{
    ViewBag.Title = string.Format("Новости");
}

<div class="news">
    @foreach (var news in Model.News)
    {
        <div class="news-strem-item-container">
            <div class="news-strem-item">
                <div class="col-xs-8">
                    <div class="news-strem-title">
                        <a href="@Url.Content(string.Format("~/news/{0}", news.TitleUrl))">@news.Title</a>
                    </div>
                    <div class="news-strem-body">
                        @news.ShortBody<a href="/news/@news.TitleUrl" alt="Читать новость">...</a>
                    </div>
                </div>
                <div class="parable-item-footer col-xs-offset-1 col-xs-3">
                    <div>
                        <span class="news-strem-date"><i class="fa fa-calendar"></i>@Convert.ToDateTime(news.CreateDate).ToString("dd.MM")</span>
                        <!--span class="news-strem-time"><i class="fa fa-clock-o"></i>Convert.ToDateTime(news.CreateDate).ToString("HH:mm")</span>
                        <a href="Url.Content(string.Format("~/news/{0}", news.TitleUrl))" class="btn btn-default btn-right read-more">Читать дальше</a-->
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="col-xs-12">@Html.PagedListPager(Model.News, page => Url.Action("Stream", new { page }))</div>
</div>
<script>
    $(function() {
        $(".menu_news").addClass("selected");
    })
</script>